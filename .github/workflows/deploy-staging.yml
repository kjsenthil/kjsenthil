name: "Deploy to staging"
on:
  push:
    branches:
      - master
jobs:
  deploy_staging:
    name: "Deploy Staging environment"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hybrid-frontend

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      #Get Branch Name on a Pull request, lowercase, 7 char long without dashes
      - name: Get Branch Name
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${{ github.event.pull_request.head.ref }})"
          echo "##[set-output name=branch-subset;]$(echo ${{ github.event.pull_request.head.ref }} | tr -d ' -' | awk '{print tolower(substr( $0, 1, 7))}')"
        id: extract_branch_name

      - uses: nelonoel/branch-name@v1
      # Use branch name for whatever purpose
      - run: echo ${BRANCH_NAME}

#      - name: Get Branch Name 2
#        run: |
#          raw=$(git branch -r --contains ${{ github.ref }})
#          branch=${raw/origin\/}
#          echo "##[set-output name=branch-subset;]$(echo $branch | tr -d ' -' | awk '{print tolower(substr( $0, 1, 7))}')"
#        id: extract_branch_name_2

      - name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Delete PR storage account
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $StorageAccountRG = "digital-hybrid-resources"
            $StorageAccountName = "dighybpr${{ steps.extract_branch_name_2.outputs.branch-subset }}"
            Write-Host " branchname2 ${{ steps.extract_branch_name.outputs.branch-subset }}"
            Write-Host " github.event.pull_request.head.ref ${{ github.event.pull_request.head.ref }}"
            Write-Host " github.base_ref ${{ github.base_ref }}"
            Write-Host " github.ref ${{ github.ref }}" //returns refs/heads/master
            Write-Host " github.event.pull_request.title ${{ github.event.pull_request.title }}"
            Write-Host " GITHUB_REF ${GITHUB_REF}"
            Write-Host " github.sha ${{ github.sha }}"
            if($(Get-AzStorageAccount -ResourceGroupName $StorageAccountRG -Name $StorageAccountName -ErrorAction Ignore) -eq $null) {
              Write-Host "$StorageAccountName Storage account doesnt exists, no action required"

            } else {
              Write-Host "Confirm $StorageAccountName storage account exists, deleting PR environment"
              Remove-AzStorageAccount -ResourceGroupName $StorageAccountRG -AccountName $StorageAccountName -Force
            }
          azPSVersion: "latest"
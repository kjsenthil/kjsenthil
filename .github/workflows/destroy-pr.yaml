name: "Destroy PR environment"

on:
  pull_request:
    branches:
      - master
    types:
      - closed
  workflow_dispatch:
    inputs:
      branch-prefix:
        description: 'Prefix of branch to be destroyed'
        required: true

jobs:
  derive_environment_prefix:
    name: "Derive environment prefix"
    runs-on: ubuntu-latest
    steps:
      # Use the first 7 chars of the hash of the branch name or passed in value, if triggered manually
      - name: "Derive environment prefix"
        id: derive-prefix
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo ::set-output name=branch-prefix::$(echo ${{ github.head_ref }} | md5sum | awk '{print tolower(substr( $0, 1, 7))}')
          else
            echo ::set-output name=branch-prefix::$(echo ${{ github.event.inputs.branch-prefix }})
          fi

      - name: "Print environment prefix"
        shell: bash
        run: echo "Branch prefix ${{ steps.derive-prefix.outputs.branch-prefix }} will be used to destroy resources"

    outputs:
      prefix: ${{ steps.derive-prefix.outputs.branch-prefix }}

  get_rg_outputs:
    name: "Get resource group outputs"
    environment: development
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform/resource_group

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: 93b71b78-b75b-4806-8282-97b9e70ae16c
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_INPUT: false

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
          terraform_wrapper: false

      - name: "Terraform Init"
        run: terraform init -backend-config="./backends/dev.backend"

      - name: "Set Terraform Outputs"
        id: set-terraform-outputs
        run: |
          echo ::set-output name=resource-group-name::$( terraform output -json | jq -r .resource_group_name.value )

    outputs:
      resource_group_name: ${{ steps.set-terraform-outputs.outputs.resource-group-name }}

  get_apim_outputs:
    name: "Get APIM outputs"
    environment: development
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform/apim

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: 93b71b78-b75b-4806-8282-97b9e70ae16c
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_INPUT: false

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
          terraform_wrapper: false

      - name: "Terraform Init"
        run: terraform init -backend-config="./backends/dev.backend"

      - name: "Set Terraform Outputs"
        id: set-terraform-outputs
        run: |
          echo ::set-output name=apim-name::$( terraform output -json | jq -r .apim_name.value )
          echo ::set-output name=apim-vnet-name::$( terraform output -json | jq -r .apim_vnet_name.value )
          echo ::set-output name=apim-subnet-name::$( terraform output -json | jq -r .apim_subnet_name.value )
          echo ::set-output name=cdn-profile-name::$( terraform output -json | jq -r .cdn_profile_name.value )
          echo ::set-output name=app-insights-name::$( terraform output -json | jq -r .app_insights_name.value )

    outputs:
      apim_name: ${{ steps.set-terraform-outputs.outputs.apim-name }}
      apim_vnet_name: ${{ steps.set-terraform-outputs.outputs.apim-vnet-name }}
      apim_subnet_name: ${{ steps.set-terraform-outputs.outputs.apim-subnet-name }}
      cdn_profile_name: ${{ steps.set-terraform-outputs.outputs.cdn-profile-name }}
      app_insights_name: ${{ steps.set-terraform-outputs.outputs.app-insights-name }}

  destroy_pr_dev_env:
    name: "Clean up PR deployment"
    runs-on: ubuntu-latest
    environment: development
    needs: [derive_environment_prefix, get_rg_outputs, get_apim_outputs]
    concurrency: dev_infra_terraform_deployment

    defaults:
      run:
        working-directory: ./terraform/infra

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: 93b71b78-b75b-4806-8282-97b9e70ae16c
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_INPUT: false

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7

      - name: "Terraform Init"
        run: terraform init -backend-config="./backends/pr.backend" -backend-config="key=${{ needs.derive_environment_prefix.outputs.prefix }}/terraform.tfstate"

      - name: "Terraform Destroy"
        run: terraform destroy -auto-approve -var-file="./var-files/dev.tfvars"
        env:
          TF_VAR_environment_prefix: ${{ needs.derive_environment_prefix.outputs.prefix }}
          TF_VAR_resource_group_name: ${{ needs.get_rg_outputs.outputs.resource_group_name }}
          TF_VAR_apim_name: ${{ needs.get_apim_outputs.outputs.apim_name }}
          TF_VAR_apim_vnet_name: ${{ needs.get_apim_outputs.outputs.apim_vnet_name }}
          TF_VAR_apim_subnet_name: ${{ needs.get_apim_outputs.outputs.apim_subnet_name }}
          TF_VAR_cdn_profile_name: ${{ needs.get_apim_outputs.outputs.cdn_profile_name }}
          TF_VAR_app_insights_name: ${{ needs.get_apim_outputs.outputs.app_insights_name }}
          TF_VAR_git_branch_name: ${{ github.head_ref }}

<policies>
  <inbound>
    <base />
    
    %{ if config.backend_url != ""}
      <set-backend-service base-url="${config.backend_url}" />
    %{ endif ~}

    %{ if config.headers != ""}
      %{ for header_type, header_value in config.headers }
      <set-header name="${ header_type }" exists-action="append">
        <value>${ header_value }</value>
      </set-header>
      %{ endfor ~}
    %{ endif ~}

    <cors>
      %{ if config.cors_allowed_origins != "" }
        <allowed-origins>
          %{ for origin in config.cors_allowed_origins }
            <origin>${ origin }</origin>
          %{ endfor ~}
        </allowed-origins>
      %{ endif ~}

      %{ if config.cors_allowed_methods != "" }
        <allowed-methods>
          %{ for method in config.cors_allowed_methods }
            <method>${ method }</method>
          %{ endfor ~}
      </allowed-methods>
      %{ endif ~}

      %{ if config.cors_allowed_headers != "" }
        <allowed-headers>
          %{ for header in config.cors_allowed_headers }
            <header>${ header }</header>
          %{ endfor ~}
        </allowed-headers>
      %{ endif ~}

      %{ if config.cors_exposed_headers != "" }
        <expose-headers>
          %{ for header in config.cors_exposed_headers }
            <header>${ header }</header>
          %{ endfor ~}
        </expose-headers>
      %{ endif ~}

    </cors>
  </inbound>
  <backend>
    <base />
  </backend>
  <outbound>
    <base />
  </outbound>
  <on-error>
    <base />
  </on-error>
</policies >